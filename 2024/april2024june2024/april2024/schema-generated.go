// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package april2024

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// QueryRunHistoryQueryRunHistory includes the requested fields of the GraphQL type RunHistory.
type QueryRunHistoryQueryRunHistory struct {
	Id           *string    `json:"id"`
	AlertTitle   string     `json:"AlertTitle"`
	AlertMessage string     `json:"AlertMessage"`
	Suggestions  string     `json:"Suggestions"`
	Error        string     `json:"Error"`
	Severity     Severity   `json:"Severity"`
	CreatedAt    *time.Time `json:"CreatedAt"`
	UpdatedAt    *time.Time `json:"UpdatedAt"`
	Action       string     `json:"Action"`
	JiraUrl      string     `json:"JiraUrl"`
	Status       string     `json:"Status"`
	Reason       string     `json:"Reason"`
}

// GetId returns QueryRunHistoryQueryRunHistory.Id, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetId() *string { return v.Id }

// GetAlertTitle returns QueryRunHistoryQueryRunHistory.AlertTitle, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetAlertTitle() string { return v.AlertTitle }

// GetAlertMessage returns QueryRunHistoryQueryRunHistory.AlertMessage, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetAlertMessage() string { return v.AlertMessage }

// GetSuggestions returns QueryRunHistoryQueryRunHistory.Suggestions, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetSuggestions() string { return v.Suggestions }

// GetError returns QueryRunHistoryQueryRunHistory.Error, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetError() string { return v.Error }

// GetSeverity returns QueryRunHistoryQueryRunHistory.Severity, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetSeverity() Severity { return v.Severity }

// GetCreatedAt returns QueryRunHistoryQueryRunHistory.CreatedAt, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetUpdatedAt returns QueryRunHistoryQueryRunHistory.UpdatedAt, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetUpdatedAt() *time.Time { return v.UpdatedAt }

// GetAction returns QueryRunHistoryQueryRunHistory.Action, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetAction() string { return v.Action }

// GetJiraUrl returns QueryRunHistoryQueryRunHistory.JiraUrl, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetJiraUrl() string { return v.JiraUrl }

// GetStatus returns QueryRunHistoryQueryRunHistory.Status, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetStatus() string { return v.Status }

// GetReason returns QueryRunHistoryQueryRunHistory.Reason, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryQueryRunHistory) GetReason() string { return v.Reason }

// QueryRunHistoryResponse is returned by QueryRunHistory on success.
type QueryRunHistoryResponse struct {
	QueryRunHistory []*QueryRunHistoryQueryRunHistory `json:"queryRunHistory"`
}

// GetQueryRunHistory returns QueryRunHistoryResponse.QueryRunHistory, and is useful for accessing the field via an interface.
func (v *QueryRunHistoryResponse) GetQueryRunHistory() []*QueryRunHistoryQueryRunHistory {
	return v.QueryRunHistory
}

type Severity string

const (
	SeverityCritical Severity = "critical"
	SeverityHigh     Severity = "high"
	SeverityMedium   Severity = "medium"
	SeverityLow      Severity = "low"
	SeverityInfo     Severity = "info"
	SeverityNone     Severity = "none"
	SeverityUnknown  Severity = "unknown"
)

// The query or mutation executed by QueryRunHistory.
const QueryRunHistory_Operation = `
query QueryRunHistory {
	queryRunHistory(order: {asc:CreatedAt}, filter: {Pass:false}) {
		id
		AlertTitle
		AlertMessage
		Suggestions
		Error
		Severity
		CreatedAt
		UpdatedAt
		Action
		JiraUrl
		Status
		Reason
	}
}
`

func QueryRunHistory(
	ctx_ context.Context,
	client_ graphql.Client,
) (*QueryRunHistoryResponse, error) {
	req_ := &graphql.Request{
		OpName: "QueryRunHistory",
		Query:  QueryRunHistory_Operation,
	}
	var err_ error

	var data_ QueryRunHistoryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
