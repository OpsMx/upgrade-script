// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package july2024

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetAttachedJiraUrlQueryRunHistory includes the requested fields of the GraphQL type RunHistory.
type GetAttachedJiraUrlQueryRunHistory struct {
	Id      *string `json:"id"`
	JiraUrl string  `json:"JiraUrl"`
}

// GetId returns GetAttachedJiraUrlQueryRunHistory.Id, and is useful for accessing the field via an interface.
func (v *GetAttachedJiraUrlQueryRunHistory) GetId() *string { return v.Id }

// GetJiraUrl returns GetAttachedJiraUrlQueryRunHistory.JiraUrl, and is useful for accessing the field via an interface.
func (v *GetAttachedJiraUrlQueryRunHistory) GetJiraUrl() string { return v.JiraUrl }

// GetAttachedJiraUrlResponse is returned by GetAttachedJiraUrl on success.
type GetAttachedJiraUrlResponse struct {
	QueryRunHistory []*GetAttachedJiraUrlQueryRunHistory `json:"queryRunHistory"`
}

// GetQueryRunHistory returns GetAttachedJiraUrlResponse.QueryRunHistory, and is useful for accessing the field via an interface.
func (v *GetAttachedJiraUrlResponse) GetQueryRunHistory() []*GetAttachedJiraUrlQueryRunHistory {
	return v.QueryRunHistory
}

// The query or mutation executed by GetAttachedJiraUrl.
const GetAttachedJiraUrl_Operation = `
query GetAttachedJiraUrl {
	queryRunHistory {
		id
		JiraUrl
	}
}
`

func GetAttachedJiraUrl(
	ctx_ context.Context,
	client_ graphql.Client,
) (*GetAttachedJiraUrlResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetAttachedJiraUrl",
		Query:  GetAttachedJiraUrl_Operation,
	}
	var err_ error

	var data_ GetAttachedJiraUrlResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
