// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package january2025february2025

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// SetDefaultValueOfProjectTypeResponse is returned by SetDefaultValueOfProjectType on success.
type SetDefaultValueOfProjectTypeResponse struct {
	UpdateProject *SetDefaultValueOfProjectTypeUpdateProjectUpdateProjectPayload `json:"updateProject"`
}

// GetUpdateProject returns SetDefaultValueOfProjectTypeResponse.UpdateProject, and is useful for accessing the field via an interface.
func (v *SetDefaultValueOfProjectTypeResponse) GetUpdateProject() *SetDefaultValueOfProjectTypeUpdateProjectUpdateProjectPayload {
	return v.UpdateProject
}

// SetDefaultValueOfProjectTypeUpdateProjectUpdateProjectPayload includes the requested fields of the GraphQL type UpdateProjectPayload.
type SetDefaultValueOfProjectTypeUpdateProjectUpdateProjectPayload struct {
	NumUids *int `json:"numUids"`
}

// GetNumUids returns SetDefaultValueOfProjectTypeUpdateProjectUpdateProjectPayload.NumUids, and is useful for accessing the field via an interface.
func (v *SetDefaultValueOfProjectTypeUpdateProjectUpdateProjectPayload) GetNumUids() *int {
	return v.NumUids
}

// The mutation executed by SetDefaultValueOfProjectType.
const SetDefaultValueOfProjectType_Operation = `
mutation SetDefaultValueOfProjectType {
	updateProject(input: {filter:{has:name},set:{type:"organization"}}) {
		numUids
	}
}
`

func SetDefaultValueOfProjectType(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *SetDefaultValueOfProjectTypeResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "SetDefaultValueOfProjectType",
		Query:  SetDefaultValueOfProjectType_Operation,
	}

	data_ = &SetDefaultValueOfProjectTypeResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
