// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package march2025april2025

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// DeleteArtifactScanDataDeleteArtifactScanDataDeleteArtifactScanDataPayload includes the requested fields of the GraphQL type DeleteArtifactScanDataPayload.
type DeleteArtifactScanDataDeleteArtifactScanDataDeleteArtifactScanDataPayload struct {
	Msg     string `json:"msg"`
	NumUids *int   `json:"numUids"`
}

// GetMsg returns DeleteArtifactScanDataDeleteArtifactScanDataDeleteArtifactScanDataPayload.Msg, and is useful for accessing the field via an interface.
func (v *DeleteArtifactScanDataDeleteArtifactScanDataDeleteArtifactScanDataPayload) GetMsg() string {
	return v.Msg
}

// GetNumUids returns DeleteArtifactScanDataDeleteArtifactScanDataDeleteArtifactScanDataPayload.NumUids, and is useful for accessing the field via an interface.
func (v *DeleteArtifactScanDataDeleteArtifactScanDataDeleteArtifactScanDataPayload) GetNumUids() *int {
	return v.NumUids
}

// DeleteArtifactScanDataResponse is returned by DeleteArtifactScanData on success.
type DeleteArtifactScanDataResponse struct {
	DeleteArtifactScanData *DeleteArtifactScanDataDeleteArtifactScanDataDeleteArtifactScanDataPayload `json:"deleteArtifactScanData"`
}

// GetDeleteArtifactScanData returns DeleteArtifactScanDataResponse.DeleteArtifactScanData, and is useful for accessing the field via an interface.
func (v *DeleteArtifactScanDataResponse) GetDeleteArtifactScanData() *DeleteArtifactScanDataDeleteArtifactScanDataDeleteArtifactScanDataPayload {
	return v.DeleteArtifactScanData
}

// DeleteRunHistoryDeleteRunHistoryDeleteRunHistoryPayload includes the requested fields of the GraphQL type DeleteRunHistoryPayload.
type DeleteRunHistoryDeleteRunHistoryDeleteRunHistoryPayload struct {
	Msg     string `json:"msg"`
	NumUids *int   `json:"numUids"`
}

// GetMsg returns DeleteRunHistoryDeleteRunHistoryDeleteRunHistoryPayload.Msg, and is useful for accessing the field via an interface.
func (v *DeleteRunHistoryDeleteRunHistoryDeleteRunHistoryPayload) GetMsg() string { return v.Msg }

// GetNumUids returns DeleteRunHistoryDeleteRunHistoryDeleteRunHistoryPayload.NumUids, and is useful for accessing the field via an interface.
func (v *DeleteRunHistoryDeleteRunHistoryDeleteRunHistoryPayload) GetNumUids() *int { return v.NumUids }

// DeleteRunHistoryResponse is returned by DeleteRunHistory on success.
type DeleteRunHistoryResponse struct {
	DeleteRunHistory *DeleteRunHistoryDeleteRunHistoryDeleteRunHistoryPayload `json:"deleteRunHistory"`
}

// GetDeleteRunHistory returns DeleteRunHistoryResponse.DeleteRunHistory, and is useful for accessing the field via an interface.
func (v *DeleteRunHistoryResponse) GetDeleteRunHistory() *DeleteRunHistoryDeleteRunHistoryDeleteRunHistoryPayload {
	return v.DeleteRunHistory
}

// GetArtifactsNoartifactArtifactScanData includes the requested fields of the GraphQL type ArtifactScanData.
type GetArtifactsNoartifactArtifactScanData struct {
	Id              string `json:"id"`
	ArtifactNameTag string `json:"artifactNameTag"`
	// platform: String! @search(by: [exact]) -> add later
	ArtifactSha string `json:"artifactSha"`
}

// GetId returns GetArtifactsNoartifactArtifactScanData.Id, and is useful for accessing the field via an interface.
func (v *GetArtifactsNoartifactArtifactScanData) GetId() string { return v.Id }

// GetArtifactNameTag returns GetArtifactsNoartifactArtifactScanData.ArtifactNameTag, and is useful for accessing the field via an interface.
func (v *GetArtifactsNoartifactArtifactScanData) GetArtifactNameTag() string {
	return v.ArtifactNameTag
}

// GetArtifactSha returns GetArtifactsNoartifactArtifactScanData.ArtifactSha, and is useful for accessing the field via an interface.
func (v *GetArtifactsNoartifactArtifactScanData) GetArtifactSha() string { return v.ArtifactSha }

// GetArtifactsResponse is returned by GetArtifacts on success.
type GetArtifactsResponse struct {
	Scanning   []*GetArtifactsScanningArtifact           `json:"scanning"`
	Noartifact []*GetArtifactsNoartifactArtifactScanData `json:"noartifact"`
}

// GetScanning returns GetArtifactsResponse.Scanning, and is useful for accessing the field via an interface.
func (v *GetArtifactsResponse) GetScanning() []*GetArtifactsScanningArtifact { return v.Scanning }

// GetNoartifact returns GetArtifactsResponse.Noartifact, and is useful for accessing the field via an interface.
func (v *GetArtifactsResponse) GetNoartifact() []*GetArtifactsNoartifactArtifactScanData {
	return v.Noartifact
}

// GetArtifactsScanningArtifact includes the requested fields of the GraphQL type Artifact.
type GetArtifactsScanningArtifact struct {
	ArtifactName string                                  `json:"artifactName"`
	ArtifactTag  string                                  `json:"artifactTag"`
	ArtifactType string                                  `json:"artifactType"`
	ScanData     []*GetArtifactsScanningArtifactScanData `json:"scanData"`
}

// GetArtifactName returns GetArtifactsScanningArtifact.ArtifactName, and is useful for accessing the field via an interface.
func (v *GetArtifactsScanningArtifact) GetArtifactName() string { return v.ArtifactName }

// GetArtifactTag returns GetArtifactsScanningArtifact.ArtifactTag, and is useful for accessing the field via an interface.
func (v *GetArtifactsScanningArtifact) GetArtifactTag() string { return v.ArtifactTag }

// GetArtifactType returns GetArtifactsScanningArtifact.ArtifactType, and is useful for accessing the field via an interface.
func (v *GetArtifactsScanningArtifact) GetArtifactType() string { return v.ArtifactType }

// GetScanData returns GetArtifactsScanningArtifact.ScanData, and is useful for accessing the field via an interface.
func (v *GetArtifactsScanningArtifact) GetScanData() []*GetArtifactsScanningArtifactScanData {
	return v.ScanData
}

// GetArtifactsScanningArtifactScanData includes the requested fields of the GraphQL type ArtifactScanData.
type GetArtifactsScanningArtifactScanData struct {
	Id              string `json:"id"`
	ArtifactNameTag string `json:"artifactNameTag"`
	// platform: String! @search(by: [exact]) -> add later
	ArtifactSha  string                                            `json:"artifactSha"`
	ArtifactRisk *GetArtifactsScanningArtifactScanDataArtifactRisk `json:"artifactRisk"`
}

// GetId returns GetArtifactsScanningArtifactScanData.Id, and is useful for accessing the field via an interface.
func (v *GetArtifactsScanningArtifactScanData) GetId() string { return v.Id }

// GetArtifactNameTag returns GetArtifactsScanningArtifactScanData.ArtifactNameTag, and is useful for accessing the field via an interface.
func (v *GetArtifactsScanningArtifactScanData) GetArtifactNameTag() string { return v.ArtifactNameTag }

// GetArtifactSha returns GetArtifactsScanningArtifactScanData.ArtifactSha, and is useful for accessing the field via an interface.
func (v *GetArtifactsScanningArtifactScanData) GetArtifactSha() string { return v.ArtifactSha }

// GetArtifactRisk returns GetArtifactsScanningArtifactScanData.ArtifactRisk, and is useful for accessing the field via an interface.
func (v *GetArtifactsScanningArtifactScanData) GetArtifactRisk() *GetArtifactsScanningArtifactScanDataArtifactRisk {
	return v.ArtifactRisk
}

// GetArtifactsScanningArtifactScanDataArtifactRisk includes the requested fields of the GraphQL type ArtifactRisk.
type GetArtifactsScanningArtifactScanDataArtifactRisk struct {
	ArtifactRiskStatus RiskStatus `json:"artifactRiskStatus"`
}

// GetArtifactRiskStatus returns GetArtifactsScanningArtifactScanDataArtifactRisk.ArtifactRiskStatus, and is useful for accessing the field via an interface.
func (v *GetArtifactsScanningArtifactScanDataArtifactRisk) GetArtifactRiskStatus() RiskStatus {
	return v.ArtifactRiskStatus
}

// GetRunHistoriesQueryRunHistory includes the requested fields of the GraphQL type RunHistory.
type GetRunHistoriesQueryRunHistory struct {
	Id *string `json:"id"`
}

// GetId returns GetRunHistoriesQueryRunHistory.Id, and is useful for accessing the field via an interface.
func (v *GetRunHistoriesQueryRunHistory) GetId() *string { return v.Id }

// GetRunHistoriesResponse is returned by GetRunHistories on success.
type GetRunHistoriesResponse struct {
	QueryRunHistory []*GetRunHistoriesQueryRunHistory `json:"queryRunHistory"`
}

// GetQueryRunHistory returns GetRunHistoriesResponse.QueryRunHistory, and is useful for accessing the field via an interface.
func (v *GetRunHistoriesResponse) GetQueryRunHistory() []*GetRunHistoriesQueryRunHistory {
	return v.QueryRunHistory
}

// PolicyRunHistoryScanningDeploymentsQueryApplicationDeployment includes the requested fields of the GraphQL type ApplicationDeployment.
// The GraphQL type's documentation follows.
//
// ApplicationDeployment tells us about the the artifact deployed along with its associated details.
type PolicyRunHistoryScanningDeploymentsQueryApplicationDeployment struct {
	// policyRunHistory is the policy execution history for this deployment
	PolicyRunHistory []*PolicyRunHistoryScanningDeploymentsQueryApplicationDeploymentPolicyRunHistory `json:"policyRunHistory"`
}

// GetPolicyRunHistory returns PolicyRunHistoryScanningDeploymentsQueryApplicationDeployment.PolicyRunHistory, and is useful for accessing the field via an interface.
func (v *PolicyRunHistoryScanningDeploymentsQueryApplicationDeployment) GetPolicyRunHistory() []*PolicyRunHistoryScanningDeploymentsQueryApplicationDeploymentPolicyRunHistory {
	return v.PolicyRunHistory
}

// PolicyRunHistoryScanningDeploymentsQueryApplicationDeploymentPolicyRunHistory includes the requested fields of the GraphQL type RunHistory.
type PolicyRunHistoryScanningDeploymentsQueryApplicationDeploymentPolicyRunHistory struct {
	Id *string `json:"id"`
}

// GetId returns PolicyRunHistoryScanningDeploymentsQueryApplicationDeploymentPolicyRunHistory.Id, and is useful for accessing the field via an interface.
func (v *PolicyRunHistoryScanningDeploymentsQueryApplicationDeploymentPolicyRunHistory) GetId() *string {
	return v.Id
}

// PolicyRunHistoryScanningDeploymentsResponse is returned by PolicyRunHistoryScanningDeployments on success.
type PolicyRunHistoryScanningDeploymentsResponse struct {
	QueryApplicationDeployment []*PolicyRunHistoryScanningDeploymentsQueryApplicationDeployment `json:"queryApplicationDeployment"`
}

// GetQueryApplicationDeployment returns PolicyRunHistoryScanningDeploymentsResponse.QueryApplicationDeployment, and is useful for accessing the field via an interface.
func (v *PolicyRunHistoryScanningDeploymentsResponse) GetQueryApplicationDeployment() []*PolicyRunHistoryScanningDeploymentsQueryApplicationDeployment {
	return v.QueryApplicationDeployment
}

// RiskStatus tells us what risk a current application instance or a deployment is at.
type RiskStatus string

const (
	RiskStatusLowrisk        RiskStatus = "lowrisk"
	RiskStatusMediumrisk     RiskStatus = "mediumrisk"
	RiskStatusHighrisk       RiskStatus = "highrisk"
	RiskStatusApocalypserisk RiskStatus = "apocalypserisk"
	RiskStatusScanning       RiskStatus = "scanning"
	RiskStatusCompleted      RiskStatus = "completed"
	RiskStatusFail           RiskStatus = "fail"
)

var AllRiskStatus = []RiskStatus{
	RiskStatusLowrisk,
	RiskStatusMediumrisk,
	RiskStatusHighrisk,
	RiskStatusApocalypserisk,
	RiskStatusScanning,
	RiskStatusCompleted,
	RiskStatusFail,
}

// SetDefaultAttemptForArtifactResponse is returned by SetDefaultAttemptForArtifact on success.
type SetDefaultAttemptForArtifactResponse struct {
	UpdateArtifact *SetDefaultAttemptForArtifactUpdateArtifactUpdateArtifactPayload `json:"updateArtifact"`
}

// GetUpdateArtifact returns SetDefaultAttemptForArtifactResponse.UpdateArtifact, and is useful for accessing the field via an interface.
func (v *SetDefaultAttemptForArtifactResponse) GetUpdateArtifact() *SetDefaultAttemptForArtifactUpdateArtifactUpdateArtifactPayload {
	return v.UpdateArtifact
}

// SetDefaultAttemptForArtifactUpdateArtifactUpdateArtifactPayload includes the requested fields of the GraphQL type UpdateArtifactPayload.
type SetDefaultAttemptForArtifactUpdateArtifactUpdateArtifactPayload struct {
	NumUids *int `json:"numUids"`
}

// GetNumUids returns SetDefaultAttemptForArtifactUpdateArtifactUpdateArtifactPayload.NumUids, and is useful for accessing the field via an interface.
func (v *SetDefaultAttemptForArtifactUpdateArtifactUpdateArtifactPayload) GetNumUids() *int {
	return v.NumUids
}

// SetDefaultAttemptForDeploymentResponse is returned by SetDefaultAttemptForDeployment on success.
type SetDefaultAttemptForDeploymentResponse struct {
	UpdateApplicationDeployment *SetDefaultAttemptForDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload `json:"updateApplicationDeployment"`
}

// GetUpdateApplicationDeployment returns SetDefaultAttemptForDeploymentResponse.UpdateApplicationDeployment, and is useful for accessing the field via an interface.
func (v *SetDefaultAttemptForDeploymentResponse) GetUpdateApplicationDeployment() *SetDefaultAttemptForDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload {
	return v.UpdateApplicationDeployment
}

// SetDefaultAttemptForDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload includes the requested fields of the GraphQL type UpdateApplicationDeploymentPayload.
type SetDefaultAttemptForDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload struct {
	NumUids *int `json:"numUids"`
}

// GetNumUids returns SetDefaultAttemptForDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload.NumUids, and is useful for accessing the field via an interface.
func (v *SetDefaultAttemptForDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload) GetNumUids() *int {
	return v.NumUids
}

// SetDefaultRunhistoryValuesResponse is returned by SetDefaultRunhistoryValues on success.
type SetDefaultRunhistoryValuesResponse struct {
	UpdateRunHistory *SetDefaultRunhistoryValuesUpdateRunHistoryUpdateRunHistoryPayload `json:"updateRunHistory"`
}

// GetUpdateRunHistory returns SetDefaultRunhistoryValuesResponse.UpdateRunHistory, and is useful for accessing the field via an interface.
func (v *SetDefaultRunhistoryValuesResponse) GetUpdateRunHistory() *SetDefaultRunhistoryValuesUpdateRunHistoryUpdateRunHistoryPayload {
	return v.UpdateRunHistory
}

// SetDefaultRunhistoryValuesUpdateRunHistoryUpdateRunHistoryPayload includes the requested fields of the GraphQL type UpdateRunHistoryPayload.
type SetDefaultRunhistoryValuesUpdateRunHistoryUpdateRunHistoryPayload struct {
	NumUids *int `json:"numUids"`
}

// GetNumUids returns SetDefaultRunhistoryValuesUpdateRunHistoryUpdateRunHistoryPayload.NumUids, and is useful for accessing the field via an interface.
func (v *SetDefaultRunhistoryValuesUpdateRunHistoryUpdateRunHistoryPayload) GetNumUids() *int {
	return v.NumUids
}

// SetDefaultScanStateForArtifactResponse is returned by SetDefaultScanStateForArtifact on success.
type SetDefaultScanStateForArtifactResponse struct {
	UpdateArtifactScanData *SetDefaultScanStateForArtifactUpdateArtifactScanDataUpdateArtifactScanDataPayload `json:"updateArtifactScanData"`
}

// GetUpdateArtifactScanData returns SetDefaultScanStateForArtifactResponse.UpdateArtifactScanData, and is useful for accessing the field via an interface.
func (v *SetDefaultScanStateForArtifactResponse) GetUpdateArtifactScanData() *SetDefaultScanStateForArtifactUpdateArtifactScanDataUpdateArtifactScanDataPayload {
	return v.UpdateArtifactScanData
}

// SetDefaultScanStateForArtifactUpdateArtifactScanDataUpdateArtifactScanDataPayload includes the requested fields of the GraphQL type UpdateArtifactScanDataPayload.
type SetDefaultScanStateForArtifactUpdateArtifactScanDataUpdateArtifactScanDataPayload struct {
	NumUids *int `json:"numUids"`
}

// GetNumUids returns SetDefaultScanStateForArtifactUpdateArtifactScanDataUpdateArtifactScanDataPayload.NumUids, and is useful for accessing the field via an interface.
func (v *SetDefaultScanStateForArtifactUpdateArtifactScanDataUpdateArtifactScanDataPayload) GetNumUids() *int {
	return v.NumUids
}

// UpdateApplicationDeploymentResponse is returned by UpdateApplicationDeployment on success.
type UpdateApplicationDeploymentResponse struct {
	UpdateApplicationDeployment *UpdateApplicationDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload `json:"updateApplicationDeployment"`
}

// GetUpdateApplicationDeployment returns UpdateApplicationDeploymentResponse.UpdateApplicationDeployment, and is useful for accessing the field via an interface.
func (v *UpdateApplicationDeploymentResponse) GetUpdateApplicationDeployment() *UpdateApplicationDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload {
	return v.UpdateApplicationDeployment
}

// UpdateApplicationDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload includes the requested fields of the GraphQL type UpdateApplicationDeploymentPayload.
type UpdateApplicationDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload struct {
	NumUids *int `json:"numUids"`
}

// GetNumUids returns UpdateApplicationDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload.NumUids, and is useful for accessing the field via an interface.
func (v *UpdateApplicationDeploymentUpdateApplicationDeploymentUpdateApplicationDeploymentPayload) GetNumUids() *int {
	return v.NumUids
}

// __DeleteArtifactScanDataInput is used internally by genqlient
type __DeleteArtifactScanDataInput struct {
	ScanIDs []string `json:"scanIDs"`
}

// GetScanIDs returns __DeleteArtifactScanDataInput.ScanIDs, and is useful for accessing the field via an interface.
func (v *__DeleteArtifactScanDataInput) GetScanIDs() []string { return v.ScanIDs }

// __DeleteRunHistoryInput is used internally by genqlient
type __DeleteRunHistoryInput struct {
	Ids []*string `json:"ids"`
}

// GetIds returns __DeleteRunHistoryInput.Ids, and is useful for accessing the field via an interface.
func (v *__DeleteRunHistoryInput) GetIds() []*string { return v.Ids }

// __SetDefaultRunhistoryValuesInput is used internally by genqlient
type __SetDefaultRunhistoryValuesInput struct {
	RunhistoryID []*string `json:"runhistoryID"`
}

// GetRunhistoryID returns __SetDefaultRunhistoryValuesInput.RunhistoryID, and is useful for accessing the field via an interface.
func (v *__SetDefaultRunhistoryValuesInput) GetRunhistoryID() []*string { return v.RunhistoryID }

// The mutation executed by DeleteArtifactScanData.
const DeleteArtifactScanData_Operation = `
mutation DeleteArtifactScanData ($scanIDs: [String]) {
	deleteArtifactScanData(filter: {id:{in:$scanIDs}}) {
		msg
		numUids
	}
}
`

func DeleteArtifactScanData(
	ctx_ context.Context,
	client_ graphql.Client,
	scanIDs []string,
) (data_ *DeleteArtifactScanDataResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteArtifactScanData",
		Query:  DeleteArtifactScanData_Operation,
		Variables: &__DeleteArtifactScanDataInput{
			ScanIDs: scanIDs,
		},
	}

	data_ = &DeleteArtifactScanDataResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteRunHistory.
const DeleteRunHistory_Operation = `
mutation DeleteRunHistory ($ids: [ID!]) {
	deleteRunHistory(filter: {id:$ids}) {
		msg
		numUids
	}
}
`

func DeleteRunHistory(
	ctx_ context.Context,
	client_ graphql.Client,
	ids []*string,
) (data_ *DeleteRunHistoryResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteRunHistory",
		Query:  DeleteRunHistory_Operation,
		Variables: &__DeleteRunHistoryInput{
			Ids: ids,
		},
	}

	data_ = &DeleteRunHistoryResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetArtifacts.
const GetArtifacts_Operation = `
query GetArtifacts {
	scanning: queryArtifact @cascade {
		artifactName
		artifactTag
		artifactType
		scanData {
			id
			artifactNameTag
			artifactSha
			artifactRisk(filter: {artifactRiskStatus:{eq:scanning}}) {
				artifactRiskStatus
			}
		}
	}
	noartifact: queryArtifactScanData(filter: {not:{has:artifactDetails}}) @cascade {
		id
		artifactNameTag
		artifactSha
	}
}
`

func GetArtifacts(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *GetArtifactsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetArtifacts",
		Query:  GetArtifacts_Operation,
	}

	data_ = &GetArtifactsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetRunHistories.
const GetRunHistories_Operation = `
query GetRunHistories {
	queryRunHistory {
		id
	}
}
`

func GetRunHistories(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *GetRunHistoriesResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetRunHistories",
		Query:  GetRunHistories_Operation,
	}

	data_ = &GetRunHistoriesResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by PolicyRunHistoryScanningDeployments.
const PolicyRunHistoryScanningDeployments_Operation = `
query PolicyRunHistoryScanningDeployments {
	queryApplicationDeployment(filter: {deploymentStage:{in:[scanning]}}) @cascade {
		policyRunHistory {
			id
		}
	}
}
`

func PolicyRunHistoryScanningDeployments(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *PolicyRunHistoryScanningDeploymentsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "PolicyRunHistoryScanningDeployments",
		Query:  PolicyRunHistoryScanningDeployments_Operation,
	}

	data_ = &PolicyRunHistoryScanningDeploymentsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by SetDefaultAttemptForArtifact.
const SetDefaultAttemptForArtifact_Operation = `
mutation SetDefaultAttemptForArtifact {
	updateArtifact(input: {set:{attempt:0},filter:{has:scanData}}) {
		numUids
	}
}
`

func SetDefaultAttemptForArtifact(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *SetDefaultAttemptForArtifactResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "SetDefaultAttemptForArtifact",
		Query:  SetDefaultAttemptForArtifact_Operation,
	}

	data_ = &SetDefaultAttemptForArtifactResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by SetDefaultAttemptForDeployment.
const SetDefaultAttemptForDeployment_Operation = `
mutation SetDefaultAttemptForDeployment {
	updateApplicationDeployment(input: {set:{attempt:0},filter:{has:component}}) {
		numUids
	}
}
`

func SetDefaultAttemptForDeployment(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *SetDefaultAttemptForDeploymentResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "SetDefaultAttemptForDeployment",
		Query:  SetDefaultAttemptForDeployment_Operation,
	}

	data_ = &SetDefaultAttemptForDeploymentResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by SetDefaultRunhistoryValues.
const SetDefaultRunhistoryValues_Operation = `
mutation SetDefaultRunhistoryValues ($runhistoryID: [ID!]) {
	updateRunHistory(input: {filter:{id:$runhistoryID},set:{ToolAccountName:"",BuildTool:"",SourceTool:"",ArtifactTool:"",DeployTool:""}}) {
		numUids
	}
}
`

func SetDefaultRunhistoryValues(
	ctx_ context.Context,
	client_ graphql.Client,
	runhistoryID []*string,
) (data_ *SetDefaultRunhistoryValuesResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "SetDefaultRunhistoryValues",
		Query:  SetDefaultRunhistoryValues_Operation,
		Variables: &__SetDefaultRunhistoryValuesInput{
			RunhistoryID: runhistoryID,
		},
	}

	data_ = &SetDefaultRunhistoryValuesResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by SetDefaultScanStateForArtifact.
const SetDefaultScanStateForArtifact_Operation = `
mutation SetDefaultScanStateForArtifact {
	updateArtifactScanData(input: {set:{scanState:"completed"},filter:{has:components}}) {
		numUids
	}
}
`

func SetDefaultScanStateForArtifact(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *SetDefaultScanStateForArtifactResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "SetDefaultScanStateForArtifact",
		Query:  SetDefaultScanStateForArtifact_Operation,
	}

	data_ = &SetDefaultScanStateForArtifactResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateApplicationDeployment.
const UpdateApplicationDeployment_Operation = `
mutation UpdateApplicationDeployment {
	updateApplicationDeployment(input: {filter:{deploymentStage:{eq:scanning}},set:{deploymentStage:discovered,attempt:1}}) {
		numUids
	}
}
`

func UpdateApplicationDeployment(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *UpdateApplicationDeploymentResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateApplicationDeployment",
		Query:  UpdateApplicationDeployment_Operation,
	}

	data_ = &UpdateApplicationDeploymentResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
