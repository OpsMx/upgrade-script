// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package november2024december2024

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode includes the requested fields of the GraphQL type FeatureMode.
type FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode struct {
	Key          string                                                                 `json:"key"`
	Value        string                                                                 `json:"value"`
	Organization *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeOrganization `json:"organization"`
	Integrator   *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegrator   `json:"integrator"`
}

// GetKey returns FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode.Key, and is useful for accessing the field via an interface.
func (v *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode) GetKey() string { return v.Key }

// GetValue returns FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode.Value, and is useful for accessing the field via an interface.
func (v *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode) GetValue() string { return v.Value }

// GetOrganization returns FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode.Organization, and is useful for accessing the field via an interface.
func (v *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode) GetOrganization() *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeOrganization {
	return v.Organization
}

// GetIntegrator returns FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode.Integrator, and is useful for accessing the field via an interface.
func (v *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode) GetIntegrator() *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegrator {
	return v.Integrator
}

// FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegrator includes the requested fields of the GraphQL type Integrator.
type FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegrator struct {
	IntegratorConfigs []*FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegratorIntegratorConfigs `json:"integratorConfigs"`
}

// GetIntegratorConfigs returns FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegrator.IntegratorConfigs, and is useful for accessing the field via an interface.
func (v *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegrator) GetIntegratorConfigs() []*FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegratorIntegratorConfigs {
	return v.IntegratorConfigs
}

// FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegratorIntegratorConfigs includes the requested fields of the GraphQL type IntegratorConfigs.
type FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegratorIntegratorConfigs struct {
	Id *string `json:"id"`
}

// GetId returns FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegratorIntegratorConfigs.Id, and is useful for accessing the field via an interface.
func (v *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeIntegratorIntegratorConfigs) GetId() *string {
	return v.Id
}

// FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeOrganization includes the requested fields of the GraphQL type Organization.
type FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeOrganization struct {
	// id is randomly assigned
	Id string `json:"id"`
}

// GetId returns FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeOrganization.Id, and is useful for accessing the field via an interface.
func (v *FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureModeOrganization) GetId() string {
	return v.Id
}

// FetchFeatureConfigsWithIntegratorConfigIDResponse is returned by FetchFeatureConfigsWithIntegratorConfigID on success.
type FetchFeatureConfigsWithIntegratorConfigIDResponse struct {
	QueryFeatureMode []*FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode `json:"queryFeatureMode"`
}

// GetQueryFeatureMode returns FetchFeatureConfigsWithIntegratorConfigIDResponse.QueryFeatureMode, and is useful for accessing the field via an interface.
func (v *FetchFeatureConfigsWithIntegratorConfigIDResponse) GetQueryFeatureMode() []*FetchFeatureConfigsWithIntegratorConfigIDQueryFeatureMode {
	return v.QueryFeatureMode
}

type IntegratorKeyValuesRef struct {
	Feat    *bool  `json:"feat"`
	Key     string `json:"key"`
	Value   string `json:"value"`
	Encrypt *bool  `json:"encrypt"`
}

// GetFeat returns IntegratorKeyValuesRef.Feat, and is useful for accessing the field via an interface.
func (v *IntegratorKeyValuesRef) GetFeat() *bool { return v.Feat }

// GetKey returns IntegratorKeyValuesRef.Key, and is useful for accessing the field via an interface.
func (v *IntegratorKeyValuesRef) GetKey() string { return v.Key }

// GetValue returns IntegratorKeyValuesRef.Value, and is useful for accessing the field via an interface.
func (v *IntegratorKeyValuesRef) GetValue() string { return v.Value }

// GetEncrypt returns IntegratorKeyValuesRef.Encrypt, and is useful for accessing the field via an interface.
func (v *IntegratorKeyValuesRef) GetEncrypt() *bool { return v.Encrypt }

// QueryAllBuildPluginsQueryBuildTool includes the requested fields of the GraphQL type BuildTool.
// The GraphQL type's documentation follows.
//
// BuildTool contains data from build tool events.
type QueryAllBuildPluginsQueryBuildTool struct {
	// plugins used at the build time
	BuildPlugins []*QueryAllBuildPluginsQueryBuildToolBuildPluginsArtifact `json:"buildPlugins"`
}

// GetBuildPlugins returns QueryAllBuildPluginsQueryBuildTool.BuildPlugins, and is useful for accessing the field via an interface.
func (v *QueryAllBuildPluginsQueryBuildTool) GetBuildPlugins() []*QueryAllBuildPluginsQueryBuildToolBuildPluginsArtifact {
	return v.BuildPlugins
}

// QueryAllBuildPluginsQueryBuildToolBuildPluginsArtifact includes the requested fields of the GraphQL type Artifact.
type QueryAllBuildPluginsQueryBuildToolBuildPluginsArtifact struct {
	Id string `json:"id"`
}

// GetId returns QueryAllBuildPluginsQueryBuildToolBuildPluginsArtifact.Id, and is useful for accessing the field via an interface.
func (v *QueryAllBuildPluginsQueryBuildToolBuildPluginsArtifact) GetId() string { return v.Id }

// QueryAllBuildPluginsResponse is returned by QueryAllBuildPlugins on success.
type QueryAllBuildPluginsResponse struct {
	QueryBuildTool []*QueryAllBuildPluginsQueryBuildTool `json:"queryBuildTool"`
}

// GetQueryBuildTool returns QueryAllBuildPluginsResponse.QueryBuildTool, and is useful for accessing the field via an interface.
func (v *QueryAllBuildPluginsResponse) GetQueryBuildTool() []*QueryAllBuildPluginsQueryBuildTool {
	return v.QueryBuildTool
}

// SetIntegratorConfigStatusAndUpdateKeyValuesResponse is returned by SetIntegratorConfigStatusAndUpdateKeyValues on success.
type SetIntegratorConfigStatusAndUpdateKeyValuesResponse struct {
	UpdateIntegratorConfigs *SetIntegratorConfigStatusAndUpdateKeyValuesUpdateIntegratorConfigsUpdateIntegratorConfigsPayload `json:"updateIntegratorConfigs"`
}

// GetUpdateIntegratorConfigs returns SetIntegratorConfigStatusAndUpdateKeyValuesResponse.UpdateIntegratorConfigs, and is useful for accessing the field via an interface.
func (v *SetIntegratorConfigStatusAndUpdateKeyValuesResponse) GetUpdateIntegratorConfigs() *SetIntegratorConfigStatusAndUpdateKeyValuesUpdateIntegratorConfigsUpdateIntegratorConfigsPayload {
	return v.UpdateIntegratorConfigs
}

// SetIntegratorConfigStatusAndUpdateKeyValuesUpdateIntegratorConfigsUpdateIntegratorConfigsPayload includes the requested fields of the GraphQL type UpdateIntegratorConfigsPayload.
type SetIntegratorConfigStatusAndUpdateKeyValuesUpdateIntegratorConfigsUpdateIntegratorConfigsPayload struct {
	NumUids *int `json:"numUids"`
}

// GetNumUids returns SetIntegratorConfigStatusAndUpdateKeyValuesUpdateIntegratorConfigsUpdateIntegratorConfigsPayload.NumUids, and is useful for accessing the field via an interface.
func (v *SetIntegratorConfigStatusAndUpdateKeyValuesUpdateIntegratorConfigsUpdateIntegratorConfigsPayload) GetNumUids() *int {
	return v.NumUids
}

// UpdateArtifactTypeResponse is returned by UpdateArtifactType on success.
type UpdateArtifactTypeResponse struct {
	UpdateArtifact *UpdateArtifactTypeUpdateArtifactUpdateArtifactPayload `json:"updateArtifact"`
}

// GetUpdateArtifact returns UpdateArtifactTypeResponse.UpdateArtifact, and is useful for accessing the field via an interface.
func (v *UpdateArtifactTypeResponse) GetUpdateArtifact() *UpdateArtifactTypeUpdateArtifactUpdateArtifactPayload {
	return v.UpdateArtifact
}

// UpdateArtifactTypeUpdateArtifactUpdateArtifactPayload includes the requested fields of the GraphQL type UpdateArtifactPayload.
type UpdateArtifactTypeUpdateArtifactUpdateArtifactPayload struct {
	NumUids *int `json:"numUids"`
}

// GetNumUids returns UpdateArtifactTypeUpdateArtifactUpdateArtifactPayload.NumUids, and is useful for accessing the field via an interface.
func (v *UpdateArtifactTypeUpdateArtifactUpdateArtifactPayload) GetNumUids() *int { return v.NumUids }

// __SetIntegratorConfigStatusAndUpdateKeyValuesInput is used internally by genqlient
type __SetIntegratorConfigStatusAndUpdateKeyValuesInput struct {
	Id      *string                   `json:"id"`
	OrgID   string                    `json:"orgID"`
	Configs []*IntegratorKeyValuesRef `json:"configs,omitempty"`
}

// GetId returns __SetIntegratorConfigStatusAndUpdateKeyValuesInput.Id, and is useful for accessing the field via an interface.
func (v *__SetIntegratorConfigStatusAndUpdateKeyValuesInput) GetId() *string { return v.Id }

// GetOrgID returns __SetIntegratorConfigStatusAndUpdateKeyValuesInput.OrgID, and is useful for accessing the field via an interface.
func (v *__SetIntegratorConfigStatusAndUpdateKeyValuesInput) GetOrgID() string { return v.OrgID }

// GetConfigs returns __SetIntegratorConfigStatusAndUpdateKeyValuesInput.Configs, and is useful for accessing the field via an interface.
func (v *__SetIntegratorConfigStatusAndUpdateKeyValuesInput) GetConfigs() []*IntegratorKeyValuesRef {
	return v.Configs
}

// __UpdateArtifactTypeInput is used internally by genqlient
type __UpdateArtifactTypeInput struct {
	Ids []string `json:"ids"`
}

// GetIds returns __UpdateArtifactTypeInput.Ids, and is useful for accessing the field via an interface.
func (v *__UpdateArtifactTypeInput) GetIds() []string { return v.Ids }

// The query or mutation executed by FetchFeatureConfigsWithIntegratorConfigID.
const FetchFeatureConfigsWithIntegratorConfigID_Operation = `
query FetchFeatureConfigsWithIntegratorConfigID {
	queryFeatureMode @cascade {
		key
		value
		organization {
			id
		}
		integrator {
			integratorConfigs {
				id
			}
		}
	}
}
`

func FetchFeatureConfigsWithIntegratorConfigID(
	ctx_ context.Context,
	client_ graphql.Client,
) (*FetchFeatureConfigsWithIntegratorConfigIDResponse, error) {
	req_ := &graphql.Request{
		OpName: "FetchFeatureConfigsWithIntegratorConfigID",
		Query:  FetchFeatureConfigsWithIntegratorConfigID_Operation,
	}
	var err_ error

	var data_ FetchFeatureConfigsWithIntegratorConfigIDResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by QueryAllBuildPlugins.
const QueryAllBuildPlugins_Operation = `
query QueryAllBuildPlugins {
	queryBuildTool @cascade {
		buildPlugins {
			id
		}
	}
}
`

func QueryAllBuildPlugins(
	ctx_ context.Context,
	client_ graphql.Client,
) (*QueryAllBuildPluginsResponse, error) {
	req_ := &graphql.Request{
		OpName: "QueryAllBuildPlugins",
		Query:  QueryAllBuildPlugins_Operation,
	}
	var err_ error

	var data_ QueryAllBuildPluginsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by SetIntegratorConfigStatusAndUpdateKeyValues.
const SetIntegratorConfigStatusAndUpdateKeyValues_Operation = `
mutation SetIntegratorConfigStatusAndUpdateKeyValues ($id: ID!, $orgID: String!, $configs: [IntegratorKeyValuesRef!]) {
	updateIntegratorConfigs(input: {filter:{id:[$id]},set:{configs:$configs,status:"active",organization:{id:$orgID}}}) {
		numUids
	}
}
`

func SetIntegratorConfigStatusAndUpdateKeyValues(
	ctx_ context.Context,
	client_ graphql.Client,
	id *string,
	orgID string,
	configs []*IntegratorKeyValuesRef,
) (*SetIntegratorConfigStatusAndUpdateKeyValuesResponse, error) {
	req_ := &graphql.Request{
		OpName: "SetIntegratorConfigStatusAndUpdateKeyValues",
		Query:  SetIntegratorConfigStatusAndUpdateKeyValues_Operation,
		Variables: &__SetIntegratorConfigStatusAndUpdateKeyValuesInput{
			Id:      id,
			OrgID:   orgID,
			Configs: configs,
		},
	}
	var err_ error

	var data_ SetIntegratorConfigStatusAndUpdateKeyValuesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by UpdateArtifactType.
const UpdateArtifactType_Operation = `
mutation UpdateArtifactType ($ids: [String!]!) {
	updateArtifact(input: {set:{artifactType:"plugin"},filter:{id:{in:$ids}}}) {
		numUids
	}
}
`

func UpdateArtifactType(
	ctx_ context.Context,
	client_ graphql.Client,
	ids []string,
) (*UpdateArtifactTypeResponse, error) {
	req_ := &graphql.Request{
		OpName: "UpdateArtifactType",
		Query:  UpdateArtifactType_Operation,
		Variables: &__UpdateArtifactTypeInput{
			Ids: ids,
		},
	}
	var err_ error

	var data_ UpdateArtifactTypeResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
